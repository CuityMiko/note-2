MySQL支持多种列类型：数值类型、日期/时间类型和字符串(字符)类型

M：表示最大显示宽度。最大有效显示宽度是255。
D：适用于浮点和定点类型，并表示小数点后面的位数。最大可能的值是30，但不应大于M-2。


数值类型概述：
 范围：如：0-255,标示该字段值不能大于255，即 值<=255(0-255),其它亦如此。

int：最大长度：11,其中第一位表示符号+或者-，后面十位表示数字,即最多只能保持10个数字
带符号的范围是-2147483648到2147483647。无符号的范围是0到4294967295.

BIT[(M)]：位字段类型。M表示每个值的位数，范围为从1到64。如果M被省略， 默认为1。

TINYINT[(M)]：很小的整数。带符号的范围是-128到127。无符号的范围是0到255。即最大长度：3

BOOL，BOOLEAN：是TINYINT(1)的同义词。zero值被视为假。非zero值视为真。

SMALLINT[(M)]:小的整数。带符号的范围是-32768到32767。无符号的范围是0到65535。即最大长度：5

MEDIUMINT[(M)]:中等大小的整数。带符号的范围是-8388608到8388607。无符号的范围是0到16777215。即最大长度：8

INTEGER[(M)]:这是INT的同义词

BIGINT[(M)]:大整数,带符号的范围是-9223372036854775808到9223372036854775807,无符号的范围是0到18446744073709551615.M=19.
当结果大于9223372036854775807时，会得到意想不到的结果。

FLOAT[(M,D)]:允许的值是-3.402823466E+38到-1.175494351E-38、0和1.175494351E-38到3.402823466E+38。这些是理论限制，基于IEEE标准。实际的范围根据硬件或操作系统的不同可能稍微小些。M是小数纵位数，D是小数点后面的位数。如果M和D被省略，根据硬件允许的限制来保存值。单精度浮点数精确到大约7位小数位。如果指定UNSIGNED，不允许负值。

DOUBLE[(M,D)]:普通大小(双精度)浮点数。允许的值是-1.7976931348623157E+308到-2.2250738585072014E-308、0和2.2250738585072014E-308到 1.7976931348623157E+308。这些是理论限制，基于IEEE标准。实际的范围根据硬件或操作系统的不同可能稍微小些。M是小数总位数，D是小数点后面的位数。如果M和D被省略，根据硬件允许的限制来保存值。双精度浮点数精确到大约15位小数位。如果指定UNSIGNED，不允许负值。

////////////////////////////////////////////////////////////////////////////////////
日期和时间类型概述

DATE:日期。支持的范围为'1000-01-01'到'9999-12-31'。MySQL以'YYYY-MM-DD'格式显示DATE值，但允许使用字符串或数字为DATE列分配值。

DATETIME: 日期和时间的组合。支持的范围是'1000-01-01 00:00:00'到'9999-12-31 23:59:59'。MySQL以'YYYY-MM-DD HH:MM:SS'格式显示DATETIME值，但允许使用字符串或数字为DATETIME列分配值。

TIMESTAMP[(M)]:时间戳。范围是'1970-01-01 00:00:00'到2037年。TIMESTAMP列用于INSERT或UPDATE操作时记录日期和时间。如果你不分配一个值，表中的第一个TIMESTAMP列自动设置为最近操作的日期和时间。也可以通过分配一个NULL值，将TIMESTAMP列设置为当前的日期和时间。TIMESTAMP值返回后显示为'YYYY-MM-DD HH:MM:SS'格式的字符串，显示宽度固定为19个字符。如果想要获得数字值，应在TIMESTAMP 列添加+0。
注释：MySQL 4.1以前使用的TIMESTAMP格式在MySQL 5.1中不支持

TIME：时间。范围是'-838:59:59'到'838:59:59'。MySQL以'HH:MM:SS'格式显示TIME值，但允许使用字符串或数字为TIME列分配值。
 
YEAR[(2|4)]：两位或四位格式的年。默认是四位格式。在四位格式中，允许的值是1901到2155和0000。在两位格式中，允许的值是70到69，表示从1970年到2069年。MySQL以YYYY 格式显示YEAR值，但允许使用字符串或数字为YEAR列分配值。

/////////////////////////////////////////////////////////////////////////////////////////
字符串类型概述

CHAR[M]:  0<=M<=255个字符,通过重编译可以设置长度：M的范围是0到65,535,个字符(或字节)，不会回收未使用的空间。

VARCHAR：跟char长度一样，如果VARCHAR列声明的长度大于255，长度前缀是两个字节。会自动回收未使用的空间。

BINARY(M):BINARY类型类似于CHAR类型，但保存二进制字节字符串而不是非二进制字符串。

VARBINARY(M):VARBINARY类型类似于VARCHAR类型，但保存二进制字节字符串而不是非二进制字符串。

TINYBLOB:最大长度为255(28–1)字节的BLOB列(不是28-1，而是2的8次方-1)。

TINYTEXT:最大长度为255(28–1)字符的TEXT列(不是28-1，而是2的8次方-1)。

BLOB[(M)]:最大长度为65,535(216–1)字节的BLOB列(不是216-1，而是2的16次方-1)。

TEXT[(M)]:最大长度为65,535(216–1)字符的TEXT列(不是216-1，而是2的16次方-1)。

MEDIUMBLOB:最大长度为16,777,215(224–1)字节的BLOB列(不是224-1，而是2的24次方-1)。

MEDIUMTEXT:最大长度为16,777,215(224–1)字符的TEXT列(不是224-1，而是2的24次方-1)。

LONGBLOB:最大长度为4,294,967,295或4GB(232–1)字节的BLOB列。LONGBLOB列的最大有效(允许的)长度取决于客户端/服务器协议中配置最大包大小和可用的内存。

LONGTEXT:最大长度为4,294,967,295或4GB(232–1)字符的TEXT列(不是232-1，而是2的32次方-1)。LONGTEXT列的最大有效(允许的)长度取决于客户端/服务器协议中配置最大包大小和可用的内存。

ENUM('value1','value2',...):枚举类型。只能有一个值的字符串，从值列'value1'，'value2'，...，NULL中或特殊 ''错误值中选出。ENUM列最多可以有65,535个截然不同的值。ENUM值在内部用整数表示。

SET('value1','value2',...):一个设置。字符串对象可以有零个或多个值，每个值必须来自列值'value1'，'value2'，...SET列最多可以有64个成员。SET值在内部用整数表示。









































