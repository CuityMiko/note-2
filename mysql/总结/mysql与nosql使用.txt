1、mysql和nosql共存是当前所有网站都使用的方案，nosql有基于内存的也有基于磁盘的，基于内存主要是用来做缓存的，基于磁盘的主要用来做数据存储
未来nosql可能在某些运用上会替代mysql，但在现在的模式下想完全替代还有一定困难，首先的问题就是mysql的易用行，以及mysql成熟的行，被业界无数次的证明了其安全可靠，而且因为有分库分表，有数据库中间层的参数（mapreduce)的存在，使得mysql能比较好的满足中到大型数据存储的要求。
对于mysql的主从来说，从已经从过去分担读压力变成了热备，因为读压力已经全部转移到内存缓存层，因而当前模式下，写反而成了最大的瓶颈，而且因为从的天然问题如：同步，从库的写瓶颈 等问题，导致了从库不能很好的完成读的任务。
因而分库分表是mysql当前面对分布式数据库的首选方案。

之所以了解这些问题主要是为了解决的一个问题：什么时候用缓存，什么时候用mysql读？
其实主要还是看数据的属性，如果某些数据会频繁的使用到，那可定是用缓存，如果某些数据不频繁读，只是很偶尔的使用，那么可以使用mysql读。

这里可以详细的来分析分库分表的几种机制：
分库会可以基于如下几种：业务、性能、安全
分表则可以按照：
	1、按字段才分表，无论是主索引还是其他其他缩影
	2、等分拆分
	3、递增拆分
	4、冷热拆分
并且在数据库领域提出的“反范式”，其实大家都在用，只是没系统的总结过，设计表结构的时候有第一范式等几个范式，
这里有几点也是我们平时强调的：去关联，适度冗余。

2、系统架构，这里涉及到了网络层、服务器、运用代码，主要的目标是弹性的系统架构，坚持几个原则点: 成本可控、业务可拓展、课维护性、安全性，细节的地方比较多，而且今天的重心是第一个问题，所以这个问题牵扯的比较少，余下的两天会关注这个。并且也会更关注开发模式的一些东西。
